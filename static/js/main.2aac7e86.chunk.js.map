{"version":3,"sources":["components/NoteAdd/NoteAdd.js","components/Modal/Modal.js","components/NoteCard.js","components/NoteList.js","App.js","reportWebVitals.js","index.js"],"names":["NoteAdd","props","getLastNoteIdOnLocalStorage","largestNum","Object","keys","localStorage","forEach","key","retrievedLocalStObj","getItem","parsedLocalStObj","JSON","parse","id","onInputChange","event","target","name","setState","value","data","onSave","NoteSave","state","renderNote","lastNoteId","this","toggleModal","className","onClick","htmlFor","onChange","type","placeholder","minLength","maxLength","style","justifyContent","React","Component","modalRoot","document","getElementById","Modal","el","createElement","appendChild","removeChild","ReactDOM","createPortal","children","NoteCard","deleteNote","onNoteDelete","updateNote","onNoteUpdate","editMode","toggleEdit","wordWrap","whiteSpace","wordBreak","NoteList","notes","map","note","App","loadNotesFromLocalStorage","length","arrayWithOldNotes","push","sort","a","b","parseFloat","notesArray","noteId","isModalOpen","onNoteSave","localStObj","setItem","stringify","noteToUpdate","newNotesArray","i","noteIdToDelete","removeItem","filter","noteName","noteData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.2aac7e86.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NoteAdd.css\";\n\nclass NoteAdd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      data: \"\",\n      id: 0,\n    };\n  }\n\n  componentDidMount() {\n    let lastNoteId = this.getLastNoteIdOnLocalStorage();\n    this.setState({ id: lastNoteId + 1 });\n  }\n\n  getLastNoteIdOnLocalStorage = () => {\n    let largestNum = 0;\n    Object.keys(localStorage).forEach((key) => {\n      let retrievedLocalStObj = localStorage.getItem(key);\n      let parsedLocalStObj = JSON.parse(retrievedLocalStObj);\n\n      if (parsedLocalStObj.id > largestNum) {\n        largestNum = parsedLocalStObj.id;\n      }\n    });\n    return largestNum;\n  };\n\n  onInputChange = (event) => {\n    switch (event.target.name) {\n      case \"note-name\":\n        this.setState({ name: event.target.value });\n        break;\n      case \"note-data\":\n        this.setState({ data: event.target.value });\n        break;\n      default:\n        return;\n    }\n  };\n\n  onSave = () => {\n    this.props.NoteSave({\n      name: this.state.name,\n      data: this.state.data,\n      id: this.state.id,\n      renderNote: true,\n    });\n    this.setState({ id: this.state.id + 1 });\n  };\n\n  render() {\n    const { toggleModal } = this.props;\n    return (\n      <div className=\"note-modal\">\n        <article className=\"br3 ba bg-white b--black-10 w-100 w-75-m mw7 shadow-5 center\">\n          <div className=\"modal-close fr pr2\" onClick={toggleModal}>\n            &times;\n          </div>\n          <main className=\"pa4 black-80 w-100\">\n            <h1>Add note</h1>\n            <hr />\n            <label className=\"mt2 fw6\" htmlFor=\"note-name\">\n              Name:\n            </label>\n            <input\n              onChange={this.onInputChange}\n              type=\"text\"\n              name=\"note-name\"\n              className=\"pa2 ba w-100\"\n              placeholder=\"Note Name\"\n              minLength=\"4\"\n              maxLength=\"75\"\n            ></input>\n            <label className=\"mt2 fw6\" htmlFor=\"note-data\">\n              Text:\n            </label>\n            <textarea\n              onChange={this.onInputChange}\n              name=\"note-data\"\n              className=\"pa2 ba w-100\"\n              placeholder=\"Enter text (max 1000 char.)\"\n              maxLength=\"1000\"\n            ></textarea>\n            <div\n              className=\"mt4 flex\"\n              style={{ justifyContent: \"space-evenly\" }}\n            >\n              <button\n                className=\"b pa2 grow pointer hover-white w-40 bg-light-green b--black-20\"\n                onClick={this.onSave}\n              >\n                Save\n              </button>\n              <button\n                className=\"b pa2 grow pointer hover-white w-40 bg-light-red b--black-20\"\n                onClick={toggleModal}\n              >\n                Cancel\n              </button>\n            </div>\n          </main>\n        </article>\n      </div>\n    );\n  }\n}\nexport default NoteAdd;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.el = document.createElement('div');\r\n  }\r\n\r\n  componentDidMount() {\r\n    modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      this.props.children,\r\n      this.el,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React from \"react\";\n\nclass NoteCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      name: \"\",\n      data: \"\",\n      id: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      name: this.props.name,\n      data: this.props.data,\n      id: this.props.id,\n    });\n  }\n\n  deleteNote = () => {\n    this.props.onNoteDelete(this.state.id);\n  };\n\n  updateNote = () => {\n    this.props.onNoteUpdate({\n      name: this.state.name,\n      data: this.state.data,\n      id: this.state.id,\n      renderNote: true,\n    });\n    this.setState({ editMode: false });\n  };\n\n  toggleEdit = () => {\n    this.setState((state) => ({\n      ...state,\n      editMode: !state.editMode,\n    }));\n  };\n\n  onInputChange = (event) => {\n    switch (event.target.name) {\n      case \"note-name\":\n        this.setState({ name: event.target.value });\n        break;\n      case \"note-data\":\n        this.setState({ data: event.target.value });\n        break;\n      default:\n        return;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"bg-light-green br3 pa3 w5 ma4 bw2 dib shadow-5\">\n        {!this.state.editMode ? (\n          <>\n            <div className=\"fr f2\" onClick={this.deleteNote}>\n              &times;\n            </div>\n            <div className=\"fl f3 mt1\" onClick={this.toggleEdit}>\n              &#x270E;\n            </div>\n            <h2\n              className=\"tc\"\n              style={{\n                wordWrap: \"break-word\",\n                whiteSpace: \"pre-wrap\",\n                wordBreak: \"break-word\",\n              }}\n            >\n              {this.state.name}\n            </h2>\n            <p\n              style={{\n                wordWrap: \"break-word\",\n                whiteSpace: \"pre-wrap\",\n                wordBreak: \"break-word\",\n              }}\n            >\n              {this.state.data}\n            </p>\n          </>\n        ) : (\n          <div>\n            <label className=\"mt2 fw6\" htmlFor=\"note-name\">\n              Name:\n            </label>\n            <input\n              onChange={this.onInputChange}\n              type=\"text\"\n              name=\"note-name\"\n              className=\"pa2 ba w-100\"\n              placeholder=\"Note Name\"\n              minLength=\"4\"\n              maxLength=\"75\"\n              value={this.state.name}\n            ></input>\n            <label className=\"mt2 fw6\" htmlFor=\"note-data\">\n              Text:\n            </label>\n            <textarea\n              onChange={this.onInputChange}\n              name=\"note-data\"\n              className=\"pa2 ba w-100\"\n              placeholder=\"Enter text (max 1000 char.)\"\n              maxLength=\"1000\"\n              value={this.state.data}\n            ></textarea>\n            <div\n              className=\"mt4 flex\"\n              style={{ justifyContent: \"space-evenly\" }}\n            >\n              <button\n                className=\"b pa2 grow pointer hover-white w-40 bg-light-green b--black-20\"\n                onClick={this.updateNote}\n              >\n                Save\n              </button>\n              <button\n                className=\"b pa2 grow pointer hover-white w-40 bg-light-red b--black-20\"\n                onClick={this.toggleEdit}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default NoteCard;\n","import React from \"react\";\nimport NoteCard from \"./NoteCard\";\n\nclass NoteList extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.notes.map((note) => {\n          return (\n            <NoteCard\n              key={note.id}\n              id={note.id}\n              name={note.name}\n              data={note.data}\n              onNoteDelete={this.props.onNoteDelete}\n              onNoteUpdate={this.props.onNoteUpdate}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default NoteList;\n","import React, { Component } from \"react\";\nimport NoteAdd from \"./components/NoteAdd/NoteAdd\";\nimport Modal from \"./components/Modal/Modal\";\nimport NoteList from \"./components/NoteList\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isModalOpen: false,\n      noteId: 0,\n      noteName: \"\",\n      noteData: \"\",\n      renderNote: true,\n      notesArray: [],\n    };\n  }\n\n  componentDidMount() {\n    this.loadNotesFromLocalStorage();\n  }\n\n  loadNotesFromLocalStorage = () => {\n    if (localStorage.length !== 0) {\n      let arrayWithOldNotes = [];\n      Object.keys(localStorage).forEach((key) => {\n        let retrievedLocalStObj = localStorage.getItem(key);\n        let parsedLocalStObj = JSON.parse(retrievedLocalStObj);\n        arrayWithOldNotes.push({\n          id: parsedLocalStObj.id,\n          name: parsedLocalStObj.name,\n          data: parsedLocalStObj.data,\n          renderNote: true,\n        });\n      });\n      arrayWithOldNotes.sort((a, b) => parseFloat(a.id) - parseFloat(b.id));\n      this.setState({\n        notesArray: arrayWithOldNotes,\n        noteId: arrayWithOldNotes.length,\n      });\n    } else {\n      return;\n    }\n  };\n\n  toggleModal = () => {\n    this.setState((state) => ({\n      ...state,\n      isModalOpen: !state.isModalOpen,\n    }));\n  };\n\n  onNoteSave = (note) => {\n    this.setState({\n      notesArray: [...this.state.notesArray, note],\n      noteId: note.id + 1,\n      isModalOpen: false,\n    });\n    let localStObj = {\n      name: note.name,\n      data: note.data,\n      id: note.id,\n    };\n    localStorage.setItem(`Note ${note.id}`, JSON.stringify(localStObj));\n  };\n\n  onNoteUpdate = (noteToUpdate) => {\n    let newNotesArray = [];\n\n    for (let i = 0; i < this.state.notesArray.length; i++) {\n      if (this.state.notesArray[i].id === noteToUpdate.id) {\n        newNotesArray.push(noteToUpdate);\n      } else {\n        newNotesArray.push(this.state.notesArray[i]);\n      }\n    }\n    let localStObj = {\n      name: noteToUpdate.name,\n      data: noteToUpdate.data,\n      id: noteToUpdate.id,\n    };\n    localStorage.setItem(`Note ${noteToUpdate.id}`, JSON.stringify(localStObj));\n\n    this.setState({ notesArray: newNotesArray });\n  };\n\n  onNoteDelete = (noteIdToDelete) => {\n    Object.keys(localStorage).forEach((note) => {\n      let retrievedLocalStObj = localStorage.getItem(note);\n      let parsedLocalStObj = JSON.parse(retrievedLocalStObj);\n\n      if (noteIdToDelete === parsedLocalStObj.id) {\n        localStorage.removeItem(note);\n      }\n    });\n    const newNotesArray = this.state.notesArray.filter((note) => {\n      return note.id !== noteIdToDelete;\n    });\n    this.setState({ notesArray: newNotesArray });\n  };\n\n  render() {\n    const { isModalOpen, notesArray, noteId } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"tc\">\n          <h1 className=\"f1\">Notes</h1>\n          <button onClick={this.toggleModal}>Add Note</button>\n        </header>\n        {this.state.isModalOpen && (\n          <Modal>\n            <NoteAdd\n              toggleModal={this.toggleModal}\n              NoteSave={this.onNoteSave}\n              isModalOpen={isModalOpen}\n              id={noteId}\n            />\n          </Modal>\n        )}\n        <div>\n          <NoteList\n            notes={notesArray}\n            onNoteDelete={this.onNoteDelete}\n            onNoteUpdate={this.onNoteUpdate}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}